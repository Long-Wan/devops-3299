name: Test
on:
  push:
  pull_request_target:
    branches:
      - 'main'
jobs:
  check-approved-users:
    needs: []
    runs-on: ubuntu-20.04
    steps:
      - id: check_user
        run: |
          approved_users=("Long-Wan" "long-wan-test")
          if [[ " ${approved_users[*]} " =~ " ${{ github.event.pull_request.sender.login }} " ]]; then echo ::set-output name=user_approved::true ; fi
    outputs:
      user_approved: ${{ steps.check_user.outputs.user_approved }}

  # This job forces the PR to be approved by an authorized reviewer before the rest of the workflow can run.
  approve:
    needs: [check-approved-users]
    runs-on: ubuntu-20.04
    if: github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository && needs.check-approved-users.outputs.user_approved != 'true'
    environment:
      name: Pull Requests
    steps:
      - name: Approve
        run: echo The workflow run must be approved before running jobs

  # This job uses skip-duplicate-actions to skip one of the duplicate workflow runs when you push to a branch with an open PR.
  pre_job:
    needs: [approve]
    runs-on: ubuntu-20.04
    if: ${{ !cancelled() }}
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.1
        with:
          skip_after_successful_duplicate: 'true'
          concurrent_skipping: 'same_content_newer'

  test:
    needs: [pre_job]
    runs-on: ubuntu-20.04
    container: node:16-alpine
    if: ${{ !cancelled() && needs.pre_job.outputs.should_skip != 'true' }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Test
        run: echo Testing
